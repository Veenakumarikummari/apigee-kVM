# This workflow will run tests using node and then publish a package to GitHub Packages when code pushed to specifc branch and deploy to Apigee

name: Apigee CICD Using Maven

# Controls when the action will run. Workflow runs when manually triggered using the UI or API.
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: environment
        options:
          - Dev
          - Test
          - Uat
      name: Import or deploy
      type:  choice
        description: Who to greet
        options: 
        - monalisa
        - cschleiden
  schedule:
    - cron: '30 18 * * 1,3'

#beloe command is deploy the code automatically when release version created and code merged  
#on:
#  release:
#    types: [created]

#beloe command is deploy the code automatically when push the code to specific branch
# on: push
#branches: [ "release/dev" ]

env:
  DEPLOYMENT_NAME: Apigee CICD Test # TODO: update to deployment name

  # Default Target Apigee Organization et environment (can be also be dynamically defined in [Set Variables *] steps)
  APIGEE_ORG: ${{ secrets.APIGEE_ORG }} 
  APIGEE_ENV: ${{ secrets.APIGEE_ENV }} 
  API_VERSION: ${{ secrets.API_VERSION }} 
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  WORKFLOW_IDENTITY_FEDERATION_NAME: ${{ secrets.WORKFLOW_IDENTITY_FEDERATION_NAME }}
  AUTHOR_EMAIL: 'veenakumari402@gmail.com'
  APIGEE_DEPLOYMENT_SUFFIX: 'relase_dev'
  APIGEE_BUILD_DEPLOYMENT_SUFFIX: 'apigee_relase_dev'

jobs:
  #Node Build section
  apigee-config-build:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

    # Setup Maven & Maven Cache
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: 8

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2   

    # Configure Workload Identity Federation and generate an access token.
      - id: 'auth'
        name: 'Authenticate to Google Apigee Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/127369686749/locations/global/workloadIdentityPools/github-test/providers/github-test'
          service_account: 'workload-identity-federation@esi-apigee-x-394004.iam.gserviceaccount.com'


    # Maven Package & Upload Apigee Budle Config in Apigee
      - name: mvn config
        run: mvn apigee-enterprise:configure -q -Pproxy_de -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV
        
  test_schedule:
          runs-on: ubuntu-latest
          steps:
          - name: Not on Monday or Wednesday
            if: github.event.schedule != '30 18 * * 1,3'
            run: echo "This step will be run on Monday,tuesday and Wednesday"

